//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dvrp.Ucc.Commons {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MessageSchemas {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MessageSchemas() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Dvrp.Ucc.Commons.MessageSchemas", typeof(MessageSchemas).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot;
        ///           targetNamespace=&quot;http://www.mini.pw.edu.pl/ucc/&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;DivideProblem&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;!-- the problem type name as given by TaskSolver and Client --&gt;
        ///        &lt;xs:element name=&quot;ProblemType&quot; type=&quot;xs:string&quot; /&gt;
        ///        &lt;!-- the ID of the problem instance assigned by the server --&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DivideProblem {
            get {
                return ResourceManager.GetString("DivideProblem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///
        ///&lt;!-- The Error message is used to inform components that they or their tasks are unknown to the server
        ///(possibly because the data have not been synchronized and switch to BackupCS occurred)
        ///--&gt;
        ///&lt;!-- Another case when Error message is used is when an exception occures on a component (TM or CN)
        ///to inform the CS or the client to inform about the exception that occurred on the CS  --&gt;
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot;
        ///           targetNamespace=&quot;http://www.mini.pw.edu.pl/ucc/&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;NoOperation&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;!-- The list of backup servers --&gt;
        ///        &lt;xs:element name=&quot;BackupCommunicationServers&quot;&gt;
        ///          &lt;xs:complexType&gt;
        ///            &lt;xs:sequence&gt;
        ///              &lt;xs:element name=&quot;BackupCommunicationS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NoOperation {
            get {
                return ResourceManager.GetString("NoOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot;
        ///           targetNamespace=&quot;http://www.mini.pw.edu.pl/ucc/&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;SolvePartialProblems&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;!-- the problem type name as given by TaskSolver and Client --&gt;
        ///        &lt;xs:element name=&quot;ProblemType&quot; type=&quot;xs:string&quot; /&gt;
        ///        &lt;!-- the ID of the problem instance assigned by the serve [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PartialProblems {
            get {
                return ResourceManager.GetString("PartialProblems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot;
        ///           targetNamespace=&quot;http://www.mini.pw.edu.pl/ucc/&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;Register&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;!-- defines the type of node (either TM, CN or CS) --&gt;
        ///        &lt;xs:element name=&quot;Type&quot;&gt;
        ///          &lt;xs:simpleType&gt;
        ///            &lt;xs:restriction base=&quot;xs:string&quot;&gt;
        ///              &lt;xs:enumeration value=&quot;T [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Register {
            get {
                return ResourceManager.GetString("Register", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot;
        ///           targetNamespace=&quot;http://www.mini.pw.edu.pl/ucc/&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;RegisterResponse&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;!-- the ID assigned by the Communication Server --&gt;
        ///        &lt;xs:element name=&quot;Id&quot; type=&quot;xs:unsignedLong&quot; /&gt;
        ///        &lt;!-- the communication timeout in seconds configured on Communication Server [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RegisterResponse {
            get {
                return ResourceManager.GetString("RegisterResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot;
        ///           targetNamespace=&quot;http://www.mini.pw.edu.pl/ucc/&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;SolutionRequest&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;!-- the ID of the problem instance assigned by the server --&gt;
        ///        &lt;xs:element name=&quot;Id&quot; type=&quot;xs:unsignedLong&quot; /&gt;
        ///      &lt;/xs:sequence&gt;
        ///    &lt;/xs:complexType&gt;
        ///  &lt;/xs:element&gt;
        ///&lt;/xs:schema&gt;.
        /// </summary>
        internal static string SolutionRequest {
            get {
                return ResourceManager.GetString("SolutionRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot;
        ///           targetNamespace=&quot;http://www.mini.pw.edu.pl/ucc/&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;Solutions&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;!-- the problem type name as given by TaskSolver and Client --&gt;
        ///        &lt;xs:element name=&quot;ProblemType&quot; type=&quot;xs:string&quot; /&gt;
        ///        &lt;!-- the ID of the problem instance assigned by the server --&gt;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Solutions {
            get {
                return ResourceManager.GetString("Solutions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot;
        ///           targetNamespace=&quot;http://www.mini.pw.edu.pl/ucc/&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;SolveRequest&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;!-- the name of the type as given by TaskSolver --&gt;
        ///        &lt;xs:element name=&quot;ProblemType&quot; type=&quot;xs:string&quot; /&gt;
        ///        &lt;!-- the optional time restriction for solving the problem (in ms) --&gt;
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SolveRequest {
            get {
                return ResourceManager.GetString("SolveRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot;
        ///           targetNamespace=&quot;http://www.mini.pw.edu.pl/ucc/&quot;
        ///           xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;SolveRequestResponse&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;!-- the ID of the problem instance assigned by the server --&gt;
        ///        &lt;xs:element name=&quot;Id&quot; type=&quot;xs:unsignedLong&quot; /&gt;
        ///      &lt;/xs:sequence&gt;
        ///    &lt;/xs:complexType&gt;
        ///  &lt;/xs:elemen [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SolveRequestResponse {
            get {
                return ResourceManager.GetString("SolveRequestResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot;
        ///           targetNamespace=&quot;http://www.mini.pw.edu.pl/ucc/&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;Status&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;!-- the ID of node (the one assigned by server) --&gt;
        ///        &lt;xs:element name=&quot;Id&quot; type=&quot;xs:unsignedLong&quot; /&gt;
        ///        &lt;!-- list of statuses for different threads --&gt;
        ///        &lt;xs:element name=&quot;Threads&quot;&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Status {
            get {
                return ResourceManager.GetString("Status", resourceCulture);
            }
        }
    }
}
